PDefs.        Program  ::= [Def] ;

terminator Def "" ;

comment "/*" "*/" ;
comment "//" ;
comment "#" ;

DFun.         Def  ::= Type Id "(" [Arg] ")" "{" [Stm] "}" ;

ADecl.        Arg  ::= Type Id ;

SDecl.        Stm  ::= Type Id ";" ;
SExp.         Stm  ::= Exp ";" ;
SReturn.      Stm  ::= "return" Exp ";" ;

separator Arg "," ;

terminator Stm "" ;

EInt.         Exp16  ::= Integer ;
EString.      Exp16  ::= String ;
EId.          Exp16  ::= Id ;

EQual.        Exp14  ::= [Qual] ;
EShiftLeft.   Exp10  ::= Exp10  "<<"  Exp11 ;
EShiftRight.  Exp10  ::= Exp10  ">>"  Exp11 ;

QDecl.        Qual  ::= Id ;

separator nonempty Qual "::" ;

separator Exp "," ;

coercions Exp 16 ;

rules         Type  ::= "int" | [Qual];

token Id (letter (letter | digit | '_')*) ;
separator nonempty Id "," ;
